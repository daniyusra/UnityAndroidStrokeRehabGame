apply plugin: 'com.android.library'


ext.buildWithDebug = false

// command line argument parsing
gradle.startParameter.taskRequests.each { taskRequest ->
    taskRequest.args.each { taskName ->
        if (taskName.contains("Debug")) {
            buildWithDebug = true
        }
    }
}

ext.unityPluginPath = "../../UnityAndroidCamera/Assets/Plugins/Android/"
ext.unityManifestPath = "../../UnityAndroidCamera/Assets/Plugins/Android/LauncherManifest.xml"
ext.unityPluginArtifact = "camera-release.aar"
ext.artifactPath = "build/outputs/aar/"
ext.manifestPath = "src/main/"
ext.artifactName = "camera"

// convenience method to deploy release Android archive and manifest to the Unity application project
gradle.buildFinished { buildResult ->

    if (buildResult.failure == null) {
        copy {
            println("....................  deploy  ..............................")

            if (buildWithDebug) {
                artifactName = artifactName + "-debug.aar"
                manifestPath = manifestPath + "AndroidManifest.xml"
            } else {
                artifactName = artifactName + "-release.aar"
                manifestPath = manifestPath + "AndroidManifest.xml"
            }

            from(artifactPath + artifactName)
            into(unityPluginPath)
            rename { String fileName ->
                fileName.replace(artifactName, unityPluginArtifact)
            }
            from(manifestPath)
            into(unityPluginPath)
            println("....................  build and deploy finished  ..............................")
        }
    }
}



android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"



    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        renderscriptTargetApi 28
        renderscriptSupportModeEnabled false
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            testCoverageEnabled = false
        }
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled = false
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
    ndkVersion '21.0.6113669'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compileOnly files('src/main/library/unity_android_player.jar')
    def camerax_version = "1.0.1"
// CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
// CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
// CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha27"
    // If you want to use the base sdk
    implementation 'com.google.mlkit:pose-detection:17.0.1-beta7'
}

task copyPlugin(type: Copy){
    dependsOn assemble
    from("build/outputs/aar")
    into("D:/UnityProjects/UnityAndroidNativeCamera/UnityAndroidCamera/Assets/Plugins/Android")
    include(project.name+"-release.aar")
}
